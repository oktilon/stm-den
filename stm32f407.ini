[binaries]
c       = 'arm-none-eabi-gcc'
ld      = 'arm-none-eabi-ld'
objcopy = 'arm-none-eabi-objcopy'
strip   = 'arm-none-eabi-strip'
gdb     = 'arm-none-eabi-gdb'
terminal= 'x-terminal-emulator'
openocd = '/usr/bin/openocd'

[built-in options]
c_args      = [
            ;    '--target=arm-none-eabi',    # define target for clang
               '-mthumb',                   # define language
               #------------------------------------
               '-fshort-enums',             # otherwise errors at linking...
               '-fmessage-length=0',        # all error warnings in a single line (default 72)
               '-fsigned-char',             # char is per default unsigned
               '-ffunction-sections',       # each function to a seperate section ==> Code-optimization / deletion
               '-fdata-sections',           # each variable to a seperate section ==> Code-optimization / deletion

            ;    '-Weverything',
               '-ffreestanding',

               #------------------------------------
               '-Wno-unused-macros',
               '-Wno-unused-parameter',
               '-Wno-padded',
               '-Wno-missing-noreturn',
               '-Wno-undef',
               '-Wno-cast-align',
               '-Wno-conversion',
               '-Wno-switch-enum',
               #------------------------------------

               # '-emit-llvm', # creates segfault : need further inspection
               '-v', # option for more verbose output
               ]

c_link_args = [
               '--target=arm-none-eabi', # define target for linker
               '-v',                     # option for more verbose output
                '-nostdlib',             # do not import the standard library's

               # '-Wl,-Map,output.map',    # create linker map file
               # '-Wl,--as-needed',        # linker optimisation
               # '-Wl,--gc-sections',      # needed for optimization
               #'-flto',
              ]

# -march=armv7-m // ??
[host_machine]
system     = 'none'
cpu_family = 'arm'
cpu        = 'cortex-m4'
endian     = 'little'